variables:
  # Packages versions
  MENDER_VERSION: "master"
  MENDER_CONNECT_VERSION: "master"
  MENDER_CONFIGURE_VERSION: "master"
  MENDER_GATEWAY_VERSION: "master"
  MENDER_MONITOR_VERSION: "master"
  # Bucket name
  S3_BUCKET_NAME: "mender"
  S3_BUCKET_NAME_PRIVATE: "mender-binaries"
  # Legacy path for mender-client: <version>/$S3_BUCKET_SUBPATH/...
  S3_BUCKET_SUBPATH: "dist-packages/debian"
  S3_BUCKET_SUBPATH_GATEWAY: "mender-gateway/debian"
  S3_BUCKET_SUBPATH_MONITOR: "mender-monitor/debian"
  # APT repo path for incoming packages
  S3_BUCKET_REPO_PATH: "repos/debian/incoming"
  # Scripts folder subpath
  S3_BUCKET_SCRIPTS_PATH: "repos/scripts"
  # GPG keys for build and distribution, to be set by CI/CD variables
  GPG_PRIV_KEY_BUILD: ""
  GPG_PUB_KEY_BUILD: ""
  GPG_PRIV_KEY_DIST: ""
  # Whether to run acceptance tests.
  TEST_MENDER_DIST_PACKAGES: "true"
  # Whether to publish packages automatically - they can always be published manually
  PUBLISH_MENDER_DIST_PACKAGES_AUTOMATIC: "false"
  # Workaround for GitLab intermittent networking
  FF_NETWORK_PER_BUILD: 1

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits-signoffs.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-license.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-python3-format.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'

stages:
  - build:images
  - build:packages
  - test
  - publish

.template:build:image:
  stage: build:images
  image: docker:git
  services:
    - docker:dind
  before_script:
    - apk --update --no-cache add bash curl aws-cli
    - eval "$(curl https://raw.githubusercontent.com/mendersoftware/mendertesting/master/mender-ci-common.sh)"
  script:
    # GPG key is available only in protected branches
    - if [ "$GPG_PRIV_KEY_BUILD" != "" ]; then
    -   GPG_KEY_BUILD="$GPG_PRIV_KEY_BUILD"
        ./docker-build-image $DISTRO $RELEASE $ARCH
    - else
    -   ./docker-build-image $DISTRO $RELEASE $ARCH
    - fi
    - docker save mendersoftware/mender-dist-packages:builder-$DISTRO-$RELEASE-$ARCH -o builder-$DISTRO-$RELEASE-$ARCH.tar
    - mender_ci_save_tmp_artifact builder-$DISTRO-$RELEASE-$ARCH.tar
  artifacts:
    paths:
      - checksums

build:image:debian:bullseye:amd64:
  variables:
    DISTRO: "debian"
    RELEASE: "bullseye"
    ARCH: "amd64"
  extends: .template:build:image

.template:build:packages:
  stage: build:packages
  image: docker:git
  services:
    - docker:dind
  tags:
    - mender-qa-slave-highcpu
  before_script:
    - apk --update --no-cache add bash curl aws-cli
    - eval "$(curl https://raw.githubusercontent.com/mendersoftware/mendertesting/master/mender-ci-common.sh)"
    - mender_ci_load_tmp_artifact builder-$DISTRO-$RELEASE-$ARCH.tar
    - docker load -i builder-$DISTRO-$RELEASE-$ARCH.tar
  script:
    - apk --update --no-cache add bash
    - ./docker-build-package $DISTRO $RELEASE $ARCH mender-client $MENDER_VERSION
    - ./docker-build-package $DISTRO $RELEASE $ARCH mender-connect $MENDER_CONNECT_VERSION
    - ./docker-build-package $DISTRO $RELEASE $ARCH mender-configure $MENDER_CONFIGURE_VERSION
    - if [ -n "${MENDER_PRIVATE_REPO_ACCESS_TOKEN}" ]; then
    -   ./docker-build-package $DISTRO $RELEASE $ARCH mender-gateway $MENDER_GATEWAY_VERSION
    -   ./docker-build-package $DISTRO $RELEASE $ARCH mender-monitor $MENDER_MONITOR_VERSION
    - fi
  artifacts:
    paths:
      - output/*

build:packages:debian:bullseye:amd64:
  variables:
    DISTRO: "debian"
    RELEASE: "bullseye"
    ARCH: "amd64"
  dependencies:
    - build:image:debian:bullseye:amd64
  extends: .template:build:packages


test:check-commits:
  only:
    variables:
      - '$TEST_MENDER_DIST_PACKAGES == "true"'

test:check-license:
  rules:
    - if: '$TEST_MENDER_DIST_PACKAGES == "true"'

test:check-python3-formatting:
  rules:
    - if: '$TEST_MENDER_DIST_PACKAGES == "true"'

